create or replace view DE6_PROJECT_III.ANALYTICS.TOP5_MONTHLY_CHART_BY_SITE(
	SITE,
	MONTH,
	MUSIC_NAME,
	ARTIST_NAME,
	TOP1_COUNT
) as
WITH all_charts AS (
  SELECT 'BILLBOARD' AS SITE, TO_DATE(BASEDT, 'YYYYMMDD') AS BASEDT, MUSIC_NAME, ARTIST_NAME, MUSIC_RANK FROM DE6_PROJECT_III.RAW_DATA.BILLBOARD_WEEKLY_CHART
  UNION ALL
  SELECT 'BUGS', TO_DATE(BASEDT, 'YYYYMMDD'), MUSIC_NAME, ARTIST_NAME, MUSIC_RANK FROM DE6_PROJECT_III.RAW_DATA.BUGS_WEEKLY_CHART
  UNION ALL
  SELECT 'GENIE', TO_DATE(BASEDT, 'YYYYMMDD'), MUSIC_NAME, ARTIST_NAME, MUSIC_RANK FROM DE6_PROJECT_III.RAW_DATA.GENIE_WEEKLY_CHART
  UNION ALL
  SELECT 'SPOTIFY', TO_DATE(BASEDT, 'YYYYMMDD'), MUSIC_NAME, ARTIST_NAME, MUSIC_RANK FROM DE6_PROJECT_III.RAW_DATA.SPOTIFY_WEEKLY_CHART
  WHERE COUNTRY_CODE = 'KR' AND MUSIC_RANK<=100
),
top1_daily AS (
  SELECT SITE, BASEDT, MUSIC_NAME, ARTIST_NAME
  FROM all_charts
  WHERE MUSIC_RANK = 1
),
monthly_top1_count AS (
  SELECT 
    SITE,
    TO_CHAR(BASEDT, 'YYYY-MM') AS MONTH,
    MUSIC_NAME,
    ARTIST_NAME,
    COUNT(*) AS TOP1_COUNT
  FROM top1_daily
  GROUP BY SITE, TO_CHAR(BASEDT, 'YYYY-MM'), MUSIC_NAME, ARTIST_NAME
),
ranked AS (
  SELECT *, RANK() OVER (PARTITION BY SITE, MONTH ORDER BY TOP1_COUNT DESC) AS RNK
  FROM monthly_top1_count
)
SELECT SITE, MONTH, MUSIC_NAME, ARTIST_NAME, TOP1_COUNT
FROM ranked
WHERE RNK <= 5;